
//===========================================================================
//
// Cyberdemon
//
//===========================================================================
class PersistenceHuntingCyberdemon : Cyberdemon replaces Cyberdemon {
	TrailNode firstTrailNode;
	TrailNode nextTrailNode;

	Default
	{
		Health 4000;
		Radius 40;
		Height 110;
		Mass 1000;
		Speed 16;
		PainChance 20;
		Monster;
		MinMissileChance 160;
		+BOSS 
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		SeeSound "cyber/sight";
		PainSound "cyber/pain";
		DeathSound "cyber/death";
		ActiveSound "cyber/active";
		Obituary "$OB_CYBORG";
		Tag "$FN_CYBER";
	}
	States
	{
	Spawn:
		CYBR AB 10 A_Look;
		Loop;
	See:
		CYBR A 3 A_Hoof;
		CYBR ABBCC 3 A_Chase;
		CYBR D 3 A_Metal;
		CYBR D 3 A_Chase;
		TNT1 A 0 HandleWaypoints;
		Loop;
	Missile:
		CYBR E 6 A_FaceTarget;
		CYBR F 12 A_CyberAttack;
		TNT1 A 0 HandleWaypoints;
		CYBR E 12 A_FaceTarget;
		CYBR F 12 A_CyberAttack;
		TNT1 A 0 HandleWaypoints;
		CYBR E 12 A_FaceTarget;
		CYBR F 12 A_CyberAttack;
		TNT1 A 0 HandleWaypoints;
		Goto See;
	Pain:
		CYBR G 10 A_Pain;
		Goto See;
	Death:
		CYBR H 10;
		CYBR I 10 A_Scream;
		CYBR JKL 10;
		CYBR M 10 A_NoBlocking;
		CYBR NO 10;
		CYBR P 30;
		CYBR P -1 A_BossDeath;
		Stop;
	}

	void A_CyberAttack()
	{
		if (target)
		{
			A_FaceTarget();
			SpawnMissile (target, "Rocket");
		}
	}
	
	void A_Hoof()
	{
		A_PlaySound("cyber/hoof", CHAN_BODY, 1, false, ATTN_IDLE);
		A_Chase();
	}

	void HandleWaypoints() {
		if (target == null) {
			return;
		}

		if (goal != null && goal.GetClassName() == "TrailNode") {
			nextTrailNode = TrailNode(goal).Following;
		}

		if (goal == null && nextTrailNode != null) {
			goal = nextTrailNode;
			Console.PrintF("Onto the next node at: ("..goal.pos.x..", "..goal.pos.y..")");
		}

		double distance = goal == null || firstTrailNode == null ? double.infinity : target.Distance3D(firstTrailNode.endNode());

		if (goal != null && distance <= 250) {
			return;
		}

		Actor nn = Spawn("TrailNode", target.pos);
		Console.PrintF("Spawned node at ("..nn.pos.x..", "..nn.pos.y..")");
		let nextNode = TrailNode(nn);

		if (goal == null || goal.GetClassName() != "TrailNode") {
			firstTrailNode = nextNode;
			goal = firstTrailNode;
			Console.PrintF("First node: ("..goal.pos.x..", "..goal.pos.y..")");
			self.bChaseGoal = 1;
			return;
		}

		firstTrailNode.appendToEnd(nextNode);
	}
}